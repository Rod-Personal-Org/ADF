{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-demos"
		},
		"AzureSqlDatabase1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase1'"
		},
		"AzureSqlDatabase2_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase2'"
		},
		"AzureSqlDatabaseADVW_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabaseADVW'"
		},
		"KofFilesRepository_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'KofFilesRepository'"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase2_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabaseADVW')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Azure SQL Adventure Works",
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabaseADVW_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/KofFilesRepository')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('KofFilesRepository_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlProductsModel')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabaseADVW",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ProductModelID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Name",
						"type": "nvarchar"
					},
					{
						"name": "CatalogDescription",
						"type": "xml"
					},
					{
						"name": "rowguid",
						"type": "uniqueidentifier"
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "SalesLT",
					"table": "ProductModel"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabaseADVW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_7mi')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "SalesLT",
					"table": "Address"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_s1l')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "KofDatos"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_7mi')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "AddressID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AddressLine1",
						"type": "nvarchar"
					},
					{
						"name": "AddressLine2",
						"type": "nvarchar"
					},
					{
						"name": "City",
						"type": "nvarchar"
					},
					{
						"name": "StateProvince",
						"type": "nvarchar"
					},
					{
						"name": "CountryRegion",
						"type": "nvarchar"
					},
					{
						"name": "PostalCode",
						"type": "nvarchar"
					},
					{
						"name": "rowguid",
						"type": "uniqueidentifier"
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "SalesLT",
					"table": "Address"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_s1l')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "KofFilesRepository",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Datos.txt",
						"container": "files"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Id",
						"type": "String"
					},
					{
						"name": "desc",
						"type": "String"
					},
					{
						"name": "price",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/KofFilesRepository')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyKOFData')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "file2DB",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "files//Datos.txt"
							},
							{
								"name": "Destination",
								"value": ".KofDatos"
							}
						],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"maxConcurrentConnections": 2
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings",
									"skipLineCount": 0
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"tableOption": "autoCreate"
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": false,
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "KofFilesRepository",
									"type": "LinkedServiceReference"
								},
								"path": "logs"
							},
							"validateDataConsistency": true,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "desc",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "desc",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "price",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "price",
											"type": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_s1l",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_s1l",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Send a failure notification",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "file2DB",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-49.eastus2.logic.azure.com:443/workflows/bb5bc06b2c66463084ab209cc8a644fe/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=fxm1msoxUxO38uW_zoTiISSlKZzcFZmR2mSbkBY54_4",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"DataFactoryName": "@{pipeline().DataFactory}",
								"PipelineName": "@{pipeline().Pipeline}",
								"Subject": "An error has occurred!",
								"ErrorMessage": "Run ID: @{pipeline().RunId}. Please, check the logs!",
								"EmailTo": "rodrigr@microsoft.com"
							},
							"datasets": [
								{
									"referenceName": "SourceDataset_s1l",
									"type": "DatasetReference",
									"parameters": {}
								}
							]
						}
					},
					{
						"name": "Success",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "file2DB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-49.eastus2.logic.azure.com:443/workflows/bb5bc06b2c66463084ab209cc8a644fe/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=fxm1msoxUxO38uW_zoTiISSlKZzcFZmR2mSbkBY54_4",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"DataFactoryName": "@{pipeline().DataFactory}",
								"PipelineName": "@{pipeline().Pipeline}",
								"Subject": "Everything OK",
								"ErrorMessage": "Run ID: @{pipeline().RunId}. Everything OK",
								"EmailTo": "rodrigr@microsoft.com"
							},
							"datasets": [
								{
									"referenceName": "SourceDataset_s1l",
									"type": "DatasetReference",
									"parameters": {}
								}
							]
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_s1l')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_s1l')]",
				"[concat(variables('factoryId'), '/linkedServices/KofFilesRepository')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopySP')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copiar datos a partir de SP",
				"activities": [
					{
						"name": "LookProduct",
						"description": "Búsqueda de Productos",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Select ProductModelID From [SalesLT].[ProductModel]\nOrder by ProductModelID",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlProductsModel",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ProducModels",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "LookProduct",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "ProductsModel",
							"value": {
								"value": "@array(activity('LookProduct').output)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEachProductModel",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "ProducModels",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@variables('ProductsModel')",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "NewProductModelsArray",
									"type": "AppendVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "CopyProductsModel",
										"value": {
											"value": "@item()",
											"type": "Expression"
										}
									}
								},
								{
									"name": "uspReadProductModels",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "NewProductModelsArray",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[uspReadProductModel]",
										"storedProcedureParameters": {
											"productModelID": {
												"value": {
													"value": "@item().count",
													"type": "Expression"
												},
												"type": "Int32"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabaseADVW",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "SpResult",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "uspReadProductModels",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "SPResult",
										"value": {
											"value": "string(@activity('uspReadProductModels').output)",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"concurrency": 1,
				"variables": {
					"ProductsModel": {
						"type": "Array"
					},
					"CopyProductsModel": {
						"type": "Array"
					},
					"SPResult": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlProductsModel')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabaseADVW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/copyep2Azsql')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_7mi",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "SalesLT.Address"
							},
							{
								"name": "Destination",
								"value": "SalesLT.Address"
							}
						],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"tableOption": "autoCreate"
							},
							"enableStaging": false,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "AddressID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "AddressID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "AddressLine1",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "AddressLine1",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "AddressLine2",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "AddressLine2",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "City",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "City",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "StateProvince",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "StateProvince",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CountryRegion",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CountryRegion",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PostalCode",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "PostalCode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "rowguid",
											"type": "Guid",
											"physicalType": "uniqueidentifier"
										},
										"sink": {
											"name": "rowguid",
											"type": "Guid"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "DateTime"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_7mi",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_7mi",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_7mi')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_7mi')]"
			]
		}
	]
}